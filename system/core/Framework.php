<?phpclass Framework {    public static function run(){        self::init();        self::rewriteEngine();        self::autoload();        self::dispatch();    }    private static function init() {        include "system/config/init_config.php";    }    private static function rewriteEngine() {        $path = ltrim($_SERVER['REQUEST_URI'], '/');        $elements = array_filter(explode('/', $path));        switch (count($elements)) {            case 0:                $path = 'common' . DS . 'index';                break;            case 1:                $path = ($elements[0] ? $elements[0] : 'common') . DS . 'index';                break;            case 2:                $path = $elements[0] . DS . ($elements[1] ? $elements[1] : 'index');                break;            default:                $path = '';                for($i=0; $i<count($elements)-1; $i++) {                    $path .= $elements[$i] . DS;                }                $path = rtrim($path, DS);                $method = end($elements);                break;        }        define("CURR_CONTROLLER", strtolower($path));        define("CURR_METHOD", isset($method) ? $method : 'index');        /*echo '<pre>' . __FILE__ . ' : ' . __LINE__ . ' -> ' . __METHOD__ . '<br>';        var_dump($elements, count($elements),$path, $method);        die();*/    }    private static function autoload() {        spl_autoload_register(array(__CLASS__,'load'));    }    private static function load($classname) {        require_once CONTROLLER_PATH . CURR_CONTROLLER. ".php";    }    private static function dispatch() {        $controller_name = self::transformPath(CURR_CONTROLLER);        $action_name = CURR_METHOD ;        $controller = new $controller_name;        $controller->$action_name();    }    private static function transformPath($path) {        $elements = array_filter(explode('/', $path));        $classname = 'Controller';        foreach($elements as $element)            $classname .= ucfirst($element);        return $classname;    }}