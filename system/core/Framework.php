<?phpclass Framework {    protected $registry;    public function __construct() {        $this->init();        $this->registry = new Registry();        $this->rewriteEngine();        $this->autoload();        $this->dispatch();    }    /*public  function run(){        $this->init();        $this->registry = new Registry();        $this->rewriteEngine();        $this->autoload();        $this->dispatch();    }*/    private  function init() {        include "system/config/init_config.php";    }    private  function rewriteEngine() {        $path = trim(strtok($_SERVER['REQUEST_URI'], '?'), '/');        $elements = array_filter(explode('/', $path));        define("CURR_DIR", $elements[0] === ADMIN_LINK ? ADMIN_PATH . DS : HOME_PATH . DS);        if($elements[0] === ADMIN_LINK) array_splice($elements, 0, 1);        switch (count($elements)) {            case 0:                $path = 'common' . DS . 'index';                break;            case 1:                $path = ($elements[0] ? $elements[0] : 'common') . DS . 'index';                break;            case 2:                $path = $elements[0] . DS . ($elements[1] ? $elements[1] : 'index');                break;            default:                $path = '';                for($i=0; $i<count($elements)-1; $i++) {                    $path .= $elements[$i] . DS;                }                $path = rtrim($path, DS);                $method = end($elements);                break;        }        if (!is_file(CONTROLLER_PATH . CURR_DIR . strtolower($path) . ".php")) {            if(($slug = $this->checkSlugDb()) === null) {                // 404                define("CURR_CONTROLLER", 'error/not_found');                define("CURR_METHOD", 'index');            } else {                define("CURR_CONTROLLER", strtolower($slug['redirect']));                define("CURR_METHOD", $slug['method'] != null ? strtolower($slug['method']) : 'index');            }        } else {            define("CURR_CONTROLLER", strtolower($path));            define("CURR_METHOD", isset($method) ? $method : 'index');        }    }    private  function autoload() {        spl_autoload_register(array(__CLASS__,'load'));    }    private  function load($classname) {        try {            if(!is_file(CONTROLLER_PATH . CURR_DIR . CURR_CONTROLLER . ".php")) {                throw new Exception ($classname . ' does not exist');            }            else                require_once CONTROLLER_PATH . CURR_DIR .  CURR_CONTROLLER . ".php";        } catch(Exception $e) {            echo "Message : " . $e->getMessage();            echo "</br>";            echo "Code : " . $e->getCode();        }    }    private function checkSlugDb() {        $path = trim(strtok($_SERVER['REQUEST_URI'], '?'), '/');        $db = new Db('');        $url_request = $db->select(DB_PREFIX . 'url_redirect')->where(["url_slug = '" . $db->escape($path) . "'"])->exec(0);        if($url_request['url_slug'] === $path)            return $url_request;        else            return null;    }    private  function dispatch() {        $controller_name = $this->transformPath(CURR_CONTROLLER);        $action_name = CURR_METHOD ;        $controller = new $controller_name($this->registry);        $controller->$action_name();    }    private  function transformPath($path) {        $elements = array_filter(explode('/', $path));        $classname = 'Controller';        foreach($elements as $element)            $classname .= str_replace('_','', ucfirst($element));        return $classname;    }}